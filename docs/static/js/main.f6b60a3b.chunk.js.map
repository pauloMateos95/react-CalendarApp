{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","previous","next","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowplu1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","text","allowOutsideClick","showCancelButton","showConfirmButton","willOpen","showLoading","close","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6b60a3b.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\n\nexport const fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}\n\n\nexport const fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}\n","export const types = {\n\n    uiOpenModal: '[ui] Open Modal',\n    uiCloseModal: '[ui] Close Modal',\n\n    eventSetActive: '[event] Set active',\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n    eventLogout: '[event] Event logout',\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n    \n\n}","import moment from 'moment'\n\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate(),\n        })\n    );\n\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\n\n\nexport const eventStartAddNew = ( event ) => {\n    return async ( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                \n                dispatch( eventAddNew( event ) );\n\n            }\n\n        } catch (error) {\n            console.log( error );\n        }\n\n\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\n\n\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\n\n\n\nexport const eventStartUpdate = ( event ) => {\n    return async ( dispatch ) => {\n        \n        try {\n\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\n\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n\n            const resp = await fetchConToken( `events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted\n});\n\n\n\n\nexport const eventStartLoading = () => {\n    return async ( dispatch ) => {\n\n        try {\n\n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n\n            dispatch( eventLoaded( events ) );\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst eventLoaded = ( events ) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\n\n\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n});","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\n\n\nexport const startLogin = ( email, password ) => {\n    return async ( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async ( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    }\n}\n\n\n\nexport const startChecking = () => {\n    return async ( dispatch ) => {\n\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            dispatch( checkingFinish() );\n        }\n\n    }\n}\n\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n});\n\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n\n    }\n};\n\nconst logout = () => ({\n    type: types.authLogout\n});","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: '',\n        lPassword: ''\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: '',\n        rEmail: '',\n        rPassword1: '',\n        rPassword2: ''\n    });\n\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n\n    const handleLogin = ( e ) => {\n        e.preventDefault();\n\n        dispatch( startLogin( lEmail, lPassword ) );\n\n    }\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n\n        if (rPassword1 !== rPassword2) {\n            return Swal.fire('Error', 'Passwords should match', 'error');\n        }\n\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\n\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Login</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Register</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Name\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\" \n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Confirm password\"\n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Create account\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n\n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    previous: '<',\n    next: '>',\n}","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <span> { title } </span>\n            <strong> { user.name } </strong>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\n\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n});","import React, { useEffect, useState } from 'react';\nimport moment from 'moment'\n\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\n\n\n\nconst now = moment().minutes(0).seconds(0).add( 1, 'hours' );\nconst nowplu1 = now.clone().add( 1, 'hours' );\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowplu1.toDate(),\n}\n\n\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowplu1.toDate() );\n    const [titleValid, setTitleValid] = useState(true);\n\n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n\n    useEffect(() => {\n        \n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    }\n\n\n\n\n    const closeModal = () => {\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n\n    }\n\n    const handleStartDateChange = (e) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n\n    const handleFinishDateChange = (e) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error', 'The end date must be greater than the start date', 'error');\n        }\n\n        if (title.trim().length < 1) {\n            return setTitleValid(false);\n        }\n\n        if (activeEvent) {\n            dispatch( eventStartUpdate( formValues ) );\n        }else {\n            dispatch( eventStartAddNew( formValues ) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n\n    }\n\n\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n\n            <h1>{ (activeEvent)? 'Edit event': 'New event' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm } \n            >\n\n                <div className=\"form-group\">\n                    <label>Start date and time</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>End date and time</label>\n                    <DateTimePicker\n                        onChange={ handleFinishDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Title and notes</label>\n                    <input \n                        type=\"text\" \n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\n                        placeholder=\"Event title\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Short description</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notes\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Additional information</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Save</span>\n                </button>\n\n            </form>\n            \n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n    return (\n        <div>\n            <button\n                className=\"btn btn-primary fab\"\n                onClick={ handleClickNew }\n            >\n\n                <i className=\"fas fa-plus\"></i>\n\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events'\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch()\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <div>\n            <button\n                className=\"btn btn-danger fab-danger\"\n                onClick={ handleDelete }\n            >\n                <i className=\"fas fa-trash\"></i>\n                <span> Delete Event </span>\n            </button>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from '../../helpers/calendar-messages';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nconst localizer = momentLocalizer(moment);\n\n\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { uid } = useSelector(state => state.auth);\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n\n    useEffect(() => {\n        \n        dispatch( eventStartLoading() );\n\n    }, [dispatch])\n\n\n    const onDoubleClick = (e) => {\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        dispatch( eventClearActiveEvent() );\n    }\n\n    const eventStyleGetter = ( event, start , end, isSelected ) => {\n\n\n\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white',\n        }\n        \n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <AddNewFab />\\\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n\n            <CalendarModal />\n\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? <Component { ...props } />\n                    : ( <Redirect to='/login' /> )\n            )}\n        \n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to='/' /> )\n                    : (<Component { ...props } />)\n            )}\n        \n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n  } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { startChecking } from '../actions/auth';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n\n    }, [dispatch])\n\n    if ( checking ) {\n        Swal.fire({\n            title: 'Loading...',\n            text: 'Please Wait',\n            allowOutsideClick: false,\n            showCancelButton: false,\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        });\n    }\n\n    if (!checking) {\n        Swal.close();\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={LoginScreen}\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={CalendarScreen}\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    checking: true\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n    \n        default:\n            return state;\n    }\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n// {\n//     id: new Date().getTime(),\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload,\n                ]\n            }\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { combineReducers } from 'redux'\nimport { authReducer } from './authReducer'\nimport { calendarReducer } from './calendarReducer'\nimport { uiReducer } from './uiReducer'\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer,\n})","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\n\nconst composeEnhancers = ( typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}